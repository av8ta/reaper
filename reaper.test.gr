import { matches, matchRegexp} from "./reaper"

let xy = matches("xy")
assert xy("xyz", 0, 1) == -1
assert xy("xyz", 1, 2) == -1
assert xy("xxyz", 0, 3) == -1
assert xy("xxyz", -1, 999) == -1
assert xy("xyz", 0, 2) == 2
assert xy("xyz", 0, 3) == 2
assert xy("xxyz", 1, 999) == 2
assert xy("xyz", -1, 999) == 2

let any = matches("")
assert any("", 0, 1) == 0
assert any(" ", 0, 1) == 0
assert any("a", 0, 1) == 0

let oneSpace = matches(" ")
assert oneSpace("", 0, 1) == -1
assert oneSpace(" ", 0, 1) == 1
assert oneSpace("  ", 0, 2) == 1

let a = matchRegexp("^a")
assert a("baaa", 0, 3) == -1
assert a("baaa", 1, 3) == 1
assert a("aaa", 0, 3) == 1
assert a("aaa", 1, 5) == 1

let caat = matchRegexp("^ca+[at]")
assert caat("caat", 0, 3) == 3
assert caat("caat", 0, 4) == 4
assert caat("cat", 0, 3) == 3
assert caat("catt", 0, 2) == -1
assert caat("caatt", 0, 2) == -1
assert caat("caatt", 0, 2) == -1
assert caat("caatt", 0, 5) == 4
assert caat("caaatt", 0, 5) == 5
assert caat("ccaaatt", 1, 4) == 3
assert caat("ccaaatt", 1, 5) == 4
assert caat("ccaaatt", 1, 7) == 5
assert caat("catt", 0, 3) == 3
assert caat("catt", 0, 4) == 3
assert caat("ct", 0, 2) == -1
assert caat("ccaaatt", 2, 7) == -1

let fox = matches("\u{1F98A}") // "🦊"
assert fox(" 🦊", 0, 999) == -1
assert fox("🦊", 0, 999) == 1
assert fox("\u{1F98A}", 0, 999) == 1

let foxy = matches("🦊")
assert foxy(" 🦊", 0, 999) == -1
assert foxy("🦊", 0, 999) == 1
assert foxy("\u{1F98A}", 0, 999) == 1

let nameRule = "^\\w+"
let name = matchRegexp(nameRule)
assert name(" bob ", 0, 5) == -1
assert name(" bob ", 1, 5) == 3
assert name("bob ", 0, 4) == 3
assert name("bob ", 0, 4) == 3
assert name(" bob ", 1, 5) == 3

let spaceRule = "^\\s+"
let space = matchRegexp(spaceRule)
assert space(" bob ", 0, 5) == 1
assert space("\u{0020}bob ", 0, 5) == 1           // space
assert space("\u{0020}\u{0020}bob ", 0, 999) == 2
assert space("\u{0009}\u{0020}bob ", 0, 999) == 2 // tab-space

print("Ok")
